worker_processes auto;
worker_rlimit_nofile 8192;
pcre_jit on;
events {
  multi_accept off;
  worker_connections 10240;
}

http {


# Security Settings
server_tokens off;  # 隐藏 NGINX 版本号，增强安全性
ssl_protocols TLSv1.2 TLSv1.3;  # 支持 TLSv1.2 和 TLSv1.3，确保兼容性和安全性
ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256";  # 优化密码套件
ssl_prefer_server_ciphers on;  # 优先使用服务器选择的密码套件
ssl_session_cache shared:SSL:100m;  # 共享 SSL 会话缓存，10MB 适合中小型站点
ssl_session_tickets off;  # 禁用会话票据，增强前向安全性
ssl_session_timeout 1d;  # 会话超时设置为 1 天
ssl_stapling on;  # 启用 OCSP Stapling，提升证书验证效率
ssl_stapling_verify on;  # 验证 OCSP 响应
#ssl_trusted_cert /path/to/trusted_ca.pem;  # 如果有，指定受信任的 CA 证书路径
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;  # 强化 HSTS
add_header X-Frame-Options "DENY" always;  # 防止点击劫持
add_header X-Content-Type-Options "nosniff" always;  # 防止 MIME 类型嗅探

  # Connection Optimisation
client_body_buffer_size 128k;  # 减小缓冲区，适合大多数用例
client_header_buffer_size 4k;  # 减小头部缓冲区，防止滥用
client_max_body_size 100m;  # 调整为更合理的大小，1g 可能过大
http2_max_concurrent_streams 128;  # HTTP/2 并发流，保持默认优化值
keepalive_timeout 200s;  # 保持连接 65 秒，单位明确
keepalive_requests 10000;  # 每个连接最多 100 个请求
large_client_header_buffers 4 8k;  # 调整为更合理的值
resolver 127.0.0.11 valid=10s;  # DNS 解析，添加单位并优化
resolver_timeout 5s;  # 缩短解析超时，提升响应速度
sendfile on;  # 启用 sendfile，提升文件传输效率
tcp_nodelay on;  # 禁用 Nagle 算法，提升小数据包传输速度
tcp_nopush on;  # 与 sendfile 配合优化数据发送

# Proxy Optimisation
proxy_buffer_size 16k;  # 减小缓冲区，避免内存浪费
proxy_buffers 8 32k;  # 调整缓冲区数量和大小，平衡性能和内存
proxy_busy_buffers_size 64k;  # 优化繁忙缓冲区大小
proxy_connect_timeout 60s;  # 添加连接超时
proxy_read_timeout 60s;  # 添加读取超时
proxy_send_timeout 60s;  # 添加发送超时

# Gzip Compression
gzip on;  # 启用压缩
gzip_buffers 16 8k;  # 缓冲区设置保持不变
gzip_comp_level 4;  # 提高压缩级别，平衡 CPU 和压缩率
gzip_min_length 256;  # 减小最小压缩长度，提升效率
gzip_proxied any;  # 对所有代理响应启用压缩
gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    application/xml+rss
    image/svg+xml;  # 优化类型列表，去掉冗余项
gzip_vary on;  # 添加 Vary 头，兼容缓存
##########################################################



  #  include https.conf;
    include /etc/nginx/upstreams.conf;


# ##############----other

    include /etc/nginx/other.conf;


  }

