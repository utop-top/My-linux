1. 使用 kubectl 查看 Pod 列表
首先确保你已经配置好 kubectl 来连接到你的 k3s 集群。你可以使用以下命令来查看所有 Pod：

bash
复制代码
kubectl get pods --all-namespaces
这将显示所有命名空间中的 Pod 列表，其中每个 Pod 可能包含多个容器。

2. 查看特定命名空间中的容器
如果你想查看某个特定命名空间下的容器，可以使用以下命令：

bash
复制代码
kubectl get pods -n <namespace>

3. 查看容器的详细信息
如果你想查看某个特定 Pod 中的容器信息，可以使用：

bash
复制代码
kubectl describe pod <pod-name> -n <namespace>
这将显示 Pod 中容器的详细信息，包括容器名称、状态、容器镜像等。

要查看 Pod 中容器的日志，可以使用 kubectl logs 命令。这里是一些常用的用法：

1. 查看单个容器的日志
如果你的 Pod 中只有一个容器，你可以直接使用以下命令查看日志：

k3s kubectl describe pod synapse-db-5878bfbb69-br56b -n matrix
kubectl logs -n matrix synapse-db-5fc97d459c-2254f

bash
复制代码
kubectl logs <pod-name> -n <namespace>
例如：

kubectl logs synapse -n matrix

bash
复制代码
kubectl logs my-pod -n default






方法 1：删除整个 Deployment
如果你想彻底删除 Deployment 及其所有 Pod，可以直接删除 Deployment 资源。Kubernetes 会自动清理相关的 ReplicaSet 和 Pod。
步骤：
假设你的 Deployment 文件名为 synapse-db.yaml，运行：
bash

kubectl apply -f 
kubectl delete -f 
k3s kubectl delete -f synapse-db.yaml

这会删除 Deployment、ReplicaSet 和所有关联的 Pod。

验证是否删除成功：
bash

k3s kubectl get pods -n matrix

检查是否还有 app=synapse-db 的 Pod。

注意：
如果你只是想临时删除 Pod 但保留 Deployment 配置（例如为了重启所有 Pod），不要用这个方法，因为它会删除整个资源。

方法 2：删除所有 Pod，但保留 Deployment
如果你只想删除当前运行的 Pod，而让 Deployment 自动重新创建新的 Pod（例如为了触发重启），可以删除 Pod 而保留 Deployment。
步骤：
使用标签选择器删除所有匹配的 Pod：
bash

k3s kubectl delete pod -n matrix -l app=synapse-db

-n matrix 指定命名空间。

-l app=synapse-db 匹配 Deployment 中定义的标签（app: synapse-db）。

验证 Pod 是否被删除并重建：
bash

k3s kubectl get pods -n matrix

你会看到旧的 Pod 被终止，新的 Pod 会被 Deployment 自动创建。






